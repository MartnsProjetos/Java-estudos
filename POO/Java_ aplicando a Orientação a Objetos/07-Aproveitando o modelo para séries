Transcri√ß√£o: Heran√ßa e Reuso de C√≥digo com T√≠tulo, Filme e S√©rie

Jacqueline e Paulo discutem boas pr√°ticas de heran√ßa em Java para evitar repeti√ß√£o de c√≥digo ao modelar filmes e s√©ries em uma plataforma de streaming.

üí° Problema
As classes Filme e Serie t√™m muitos atributos e m√©todos em comum, como nome, anoDeLancamento, avaliacoes, e duracaoEmMinutos.

üß† Solu√ß√£o
Criar uma superclasse chamada Titulo que concentra todos os elementos comuns. Depois, usar heran√ßa (extends) para que Filme e Serie herdem esses elementos e adicionem apenas o que for exclusivo.

üìÅ Classe Titulo
Cont√©m atributos comuns: nome, anoDeLancamento, avaliacoes, etc.

M√©todos: exibeFichaTecnica(), avalia(double nota), pegaMedia(), getters e setters.

java
Copiar
Editar
public class Titulo {
    private String nome;
    private int anoDeLancamento;
    private boolean incluidoNoPlano;
    private double somaDasAvaliacoes;
    private int totalDeAvaliacoes;
    private int duracaoEmMinutos;
    
    // m√©todos: exibeFichaTecnica, avalia, pegaMedia, getters/setters
}
üé¨ Classe Filme
Herda de Titulo com extends Titulo

Atributo exclusivo: diretor

java
Copiar
Editar
public class Filme extends Titulo {
    private String diretor;
    // getters/setters
}
üì∫ Classe Serie
Tamb√©m herda de Titulo

Atributos exclusivos: temporadas, episodiosPorTemporada, minutosPorEpisodio, ativa

java
Copiar
Editar
public class Serie extends Titulo {
    private int temporadas;
    private boolean ativa;
    private int episodiosPorTemporada;
    private int minutosPorEpisodio;
    // getters/setters
}
üß™ Teste na classe Principal
Mesmo sem nada extra na classe Serie, ela j√° consegue usar os m√©todos herdados de Titulo, como setNome() e exibeFichaTecnica(). Depois, adicionam-se os dados espec√≠ficos da s√©rie.

java
Copiar
Editar
Serie lost = new Serie();
lost.setNome("Lost");
lost.setDataDeLancamento(2000);
lost.exibeFichaTecnica(); // Usa m√©todo herdado
lost.setTemporadas(10);
lost.setEpisodiosPorTemporada(10);
‚úÖ Conclus√£o
A heran√ßa foi aplicada corretamente com um supertipo gen√©rico (Titulo), evitando c√≥digo duplicado e melhorando a organiza√ß√£o do sistema. Isso reflete boas pr√°ticas reais de orienta√ß√£o a objetos.
