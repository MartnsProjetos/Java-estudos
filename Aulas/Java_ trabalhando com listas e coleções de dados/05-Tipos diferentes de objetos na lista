üìö Resumo da Aula: Trabalhando com Listas e Polimorfismo em Java
Cria√ß√£o de Pacote e Classe Principal

Criado um novo pacote principal.

Dentro dele, criada a classe PrincipalComListas com m√©todo main().

Adi√ß√£o de Filmes e S√©ries

Instanciados 3 objetos da classe Filme e 1 da classe Serie.

Criada uma lista com tipo ArrayList<Titulo> para armazenar tanto filmes quanto s√©ries.

Uso de Polimorfismo

A lista foi tipada como ArrayList<Titulo> (classe m√£e), permitindo armazenar objetos de Filme e Serie.

Importa√ß√µes Autom√°ticas

Usado Alt + Enter para importar classes automaticamente.

Impress√£o com for-each

Usado for (Titulo item : lista) para iterar e imprimir nomes dos t√≠tulos.

Como n√£o havia toString() na classe Serie, foi impresso um c√≥digo de objeto.

Evitar ArrayList<Object>

Foi explicado por que n√£o se deve usar ArrayList<Object>: aceita qualquer tipo, o que n√£o √© seguro nem recomend√°vel.

Avalia√ß√£o de Filmes

Os filmes foram avaliados usando o m√©todo .avalia().

Tentou-se imprimir a classifica√ß√£o com item.getClassificacao(), mas isso gerou erro pois getClassificacao() √© exclusivo de Filme.

Type Casting

Usado casting: Filme filme = (Filme) item;

Funcionou nos filmes, mas lan√ßou exce√ß√£o (ClassCastException) quando encontrou a s√©rie.

Erro de Execu√ß√£o

O erro aconteceu porque Serie n√£o pode ser convertida para Filme.

Conclus√£o: √© necess√°rio verificar o tipo antes de fazer o casting (com instanceof ‚Äî ser√° ensinado depois).
